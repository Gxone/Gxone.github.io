I"<h2 id="bubble-sort">Bubble Sort</h2>
<p>버블 정렬에서는 정렬될 레코드의 배열에 대해서 여러 번 왼쪽 - 오른쪽 패스가 만들어진다. 각 패스에서 인접한 레코드의 쌍이 비교되고 필요하면 서로 교환된다. 어떤 레코드도 교환되지 않은 패스 다음에는 정렬이 끝난다.</p>

<p>안정성이 있지만 비효율적이며 구현하기 쉽지만 속도가 느리다. O(n^2)</p>

<h2 id="작성-코드">작성 코드</h2>
<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">bubbleSort</span><span class="p">(</span><span class="n">arr</span><span class="p">):</span>
  <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">arr</span><span class="p">)):</span> 
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">):</span>
      <span class="n">j</span> <span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span> 
      <span class="k">if</span> <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">arr</span><span class="p">[</span><span class="n">j</span><span class="p">]:</span> 
        <span class="n">temp</span> <span class="o">=</span> <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
        <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">arr</span><span class="p">[</span><span class="n">j</span><span class="p">]</span>
        <span class="n">arr</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">temp</span>
  <span class="k">return</span> <span class="n">arr</span>
</code></pre></div></div>
<p>인덱스 j 와 비교할 대상 인덱스는 j 다음의 인덱스이기 때문에 j 에 1을 더한 인덱스의 요소와 비교하도록 한다. 
반복문을 돌면서 비교하다가 j 인덱스의 요소가 더 작을 경우 i 요소와 j 의 요소를 바꿔준다.</p>

<h2 id="model-solution">MODEL SOLUTION</h2>
<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">bubbleSort</span><span class="p">(</span><span class="n">arr</span><span class="p">):</span>
  <span class="n">n</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
  <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="c1"># 마지막 i번째는 이미 큰 수로 정렬된 상태니까 그 전까지
</span>    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">n</span><span class="o">-</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">):</span>
      <span class="k">if</span> <span class="n">arr</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">arr</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="p">:</span>
        <span class="n">arr</span><span class="p">[</span><span class="n">j</span><span class="p">],</span> <span class="n">arr</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">arr</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span> <span class="n">arr</span><span class="p">[</span><span class="n">j</span><span class="p">]</span>
</code></pre></div></div>
<p>모델 솔루션을 보니 따로 변수에 인덱스+1 을 저장하지 않고 바로 arr[j+1] 로 비교해주었다. 나중에 따로 해당 변수를 사용하지 않는다면 따로 변수를 선언해주지 않아도 될 것 같다.
또한 따로 temp 변수에 담아 자리를 바꾸지 않고 바로 <code class="language-plaintext highlighter-rouge">arr[j], arr[j+1] = arr[j+1], arr[j]</code> 와 같은 형태로 쓸 수 있다는 것을 알 수 있었다!
—</p>

<p>참고 자료 - C++ 자료구조론</p>
:ET