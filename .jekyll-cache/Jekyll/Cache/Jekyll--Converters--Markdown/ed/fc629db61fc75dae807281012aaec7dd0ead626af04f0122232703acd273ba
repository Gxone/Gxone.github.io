I"<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// UserController.java</span>

   <span class="nd">@GetMapping</span><span class="o">(</span><span class="s">"/users/{id}"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">Resource</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;</span> <span class="nf">retrieveUser</span><span class="o">(</span><span class="nd">@PathVariable</span> <span class="kt">int</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">User</span> <span class="n">user</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">findOne</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>

        <span class="k">if</span> <span class="o">(</span><span class="n">user</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">UserNotFoundException</span><span class="o">(</span><span class="nc">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"ID[%s] not found"</span><span class="o">,</span> <span class="n">id</span><span class="o">));</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">resource</span><span class="o">;</span>
    <span class="o">}</span>
</code></pre></div></div>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// UserNotFoundException.java</span>

<span class="c1">// HTTP Status code</span>
<span class="c1">// 2XX -&gt; OK</span>
<span class="c1">// 4XX -&gt; Client</span>
<span class="c1">// 5XX -&gt; Server</span>
<span class="nd">@ResponseStatus</span><span class="o">(</span><span class="nc">HttpStatus</span><span class="o">.</span><span class="na">NOT_FOUND</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">UserNotFoundException</span> <span class="kd">extends</span> <span class="nc">RuntimeException</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="nf">UserNotFoundException</span><span class="o">(</span><span class="nc">String</span> <span class="n">message</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">(</span><span class="n">message</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>
    <p><code class="language-plaintext highlighter-rouge">@ResponseStatus(HttpStatus.NOT_FOUND)</code> -&gt; user 데이터가 없을 경우 이 예외 클래스는 <b>500 에러</b>가 아닌 <b>404 에러 (Not Found)</b>로 클라이언트에게 전달하도록 한다.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">Throwable</code> 이 아닌 실행시 발생되는 오류인 <code class="language-plaintext highlighter-rouge">RuntimeException</code> 으로 처리!</p>
  </li>
</ul>

<hr />
<p>참고 자료: Spring Boot를 이용한 RESTful Web Services 개발</p>
:ET