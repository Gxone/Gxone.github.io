I"X<h2 id="starbucks-model">Starbucks Model</h2>
<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Category</span><span class="p">(</span><span class="n">models</span><span class="p">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">name</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">db_table</span> <span class="o">=</span> <span class="s">'categories'</span>

<span class="k">class</span> <span class="nc">Drink</span><span class="p">(</span><span class="n">models</span><span class="p">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">name</span>          <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
    <span class="n">description</span>   <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">2048</span><span class="p">)</span>
    <span class="n">category</span>      <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="s">'Category'</span><span class="p">,</span> <span class="n">on_delete</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">CASCADE</span><span class="p">)</span>
    <span class="n">nutrition</span>     <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">OneToOneField</span><span class="p">(</span><span class="s">'Nutrition'</span><span class="p">,</span> <span class="n">on_delete</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">CASCADE</span><span class="p">)</span>
    <span class="n">allergy_drink</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">ManyToManyField</span><span class="p">(</span><span class="s">'Allergy'</span><span class="p">,</span> <span class="n">through</span><span class="o">=</span><span class="s">'AllergyDrink'</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">db_table</span> <span class="o">=</span> <span class="s">'drinks'</span>

<span class="k">class</span> <span class="nc">Nutrition</span><span class="p">(</span><span class="n">models</span><span class="p">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">one_serving_kcal</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">DecimalField</span><span class="p">(</span><span class="n">max_digits</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">decimal_places</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
    <span class="n">sodium_mg</span>        <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">DecimalField</span><span class="p">(</span><span class="n">max_digits</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">decimal_places</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
    <span class="n">saturated_fat_g</span>  <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">DecimalField</span><span class="p">(</span><span class="n">max_digits</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">decimal_places</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
    <span class="n">sugars_g</span>         <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">DecimalField</span><span class="p">(</span><span class="n">max_digits</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">decimal_places</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
    <span class="n">protein_g</span>        <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">DecimalField</span><span class="p">(</span><span class="n">max_digits</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">decimal_places</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
    <span class="n">caffeine_mg</span>      <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">DecimalField</span><span class="p">(</span><span class="n">max_digits</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">decimal_places</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">db_table</span> <span class="o">=</span> <span class="s">'nutritions'</span>

<span class="k">class</span> <span class="nc">Image</span><span class="p">(</span><span class="n">models</span><span class="p">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">image_url</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">URLField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span> <span class="mi">2000</span><span class="p">)</span>
    <span class="n">drink</span>     <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="s">'Drink'</span><span class="p">,</span> <span class="n">on_delete</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">SET_NULL</span><span class="p">,</span> <span class="n">null</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">db_table</span> <span class="o">=</span> <span class="s">'images'</span>

<span class="k">class</span> <span class="nc">Size</span><span class="p">(</span><span class="n">models</span><span class="p">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">name</span>             <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">45</span><span class="p">)</span>
    <span class="n">size_ml</span>          <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="n">size_fluid_ounce</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">DecimalField</span><span class="p">(</span><span class="n">max_digits</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">decimal_places</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
    <span class="n">nutrition</span>        <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="s">'Nutrition'</span><span class="p">,</span> <span class="n">on_delete</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">SET_NULL</span><span class="p">,</span> <span class="n">null</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">db_table</span> <span class="o">=</span> <span class="s">'sizes'</span>

<span class="k">class</span> <span class="nc">Allergy</span><span class="p">(</span><span class="n">models</span><span class="p">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">name</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span> <span class="o">=</span> <span class="mi">45</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">db_table</span> <span class="o">=</span> <span class="s">'allergies'</span>

<span class="k">class</span> <span class="nc">AllergyDrink</span><span class="p">(</span><span class="n">models</span><span class="p">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">allergy</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="s">'Allergy'</span><span class="p">,</span> <span class="n">on_delete</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">SET_NULL</span><span class="p">,</span> <span class="n">null</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">drink</span>   <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="s">'Drink'</span><span class="p">,</span> <span class="n">on_delete</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">SET_NULL</span><span class="p">,</span> <span class="n">null</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">db_table</span> <span class="o">=</span> <span class="s">'allergies_drinks'</span>
</code></pre></div></div>

<p>Starbucks 모델을 바탕으로 공부한 내용을 정리해보았다.</p>

<hr />

<h3 id="11-관계">1:1 관계</h3>
<p><code class="language-plaintext highlighter-rouge">Drink</code>와 <code class="language-plaintext highlighter-rouge">Nutrition</code> 을 <em>One-to-One</em> 관계로 지정 할 수 있다. 음료와 영양정보는 각 일대일로 매칭되어 <code class="language-plaintext highlighter-rouge">Drink</code> 모델에 영양정보에 관한 <code class="language-plaintext highlighter-rouge">nutrition</code> 필드를 지정해준다.</p>

<h3 id="1n-관계">1:N 관계</h3>
<p>하나의 <code class="language-plaintext highlighter-rouge">Category</code>에는 여러 개의 <code class="language-plaintext highlighter-rouge">Drink</code>를 가지고 있다. 따라서 <em>One(Category)-to-Many(Drink)</em> 로 관계이다. 따라서 <code class="language-plaintext highlighter-rouge">Drink</code> 테이블에 <code class="language-plaintext highlighter-rouge">Category</code> 테이블과을 참조하는  <code class="language-plaintext highlighter-rouge">ForeignKey</code> 필드를 지정한다.</p>

<h3 id="nm-관계">N:M 관계</h3>
<p><code class="language-plaintext highlighter-rouge">Drink</code>와 <code class="language-plaintext highlighter-rouge">Allergy</code>는 <em>Many-to-Many</em> 관계로 지정할 수 있다. 홈페이지에서도 확인 할 수 있듯이 음료에는 다수의 알러지 정보를 가질 수 있고 반대로 알러지도 여러 음료를 가지고 있다고 할 수 있다. Django 에서는 중간 테이블을 통해 두 개의 테이블을 제어하는데 <code class="language-plaintext highlighter-rouge">through</code> 로 직접 중간 테이블을 지정할 수 있고 따로 정의하지 않아도 기본으로 중간 테이블을 생성한다. 중간 테이블을 생성할 경우 장점은 직접 중간테이블에 필요한 필드를 만들 수 있다.</p>

<p><br /></p>

<hr />

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="n">Drink</span><span class="p">.</span><span class="n">objects</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span> <span class="c1"># Hits the database
</span><span class="n">b</span> <span class="o">=</span> <span class="n">a</span><span class="p">.</span><span class="n">category</span> <span class="c1"># Hits the database
</span>
<span class="c1">#---------------------------------------------------------#
</span>
<span class="n">c</span> <span class="o">=</span> <span class="n">Drink</span><span class="p">.</span><span class="n">objects</span><span class="p">.</span><span class="n">select_related</span><span class="p">(</span><span class="s">'category'</span><span class="p">).</span><span class="n">get</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span> <span class="c1"># Hits the database
</span><span class="n">d</span> <span class="o">=</span> <span class="n">c</span><span class="p">.</span><span class="n">category</span> <span class="c1"># Doesn't hit the database
</span></code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="n">Drink</span><span class="p">.</span><span class="n">objects</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span> <span class="c1"># Hits the database
</span><span class="n">b</span> <span class="o">=</span> <span class="n">a</span><span class="p">.</span><span class="n">allergy_drink</span><span class="p">.</span><span class="nb">all</span><span class="p">()</span> <span class="c1"># Hits the database
</span>
<span class="c1">#---------------------------------------------------------#
</span>
<span class="n">c</span> <span class="o">=</span> <span class="n">Drink</span><span class="p">.</span><span class="n">objects</span><span class="p">.</span><span class="n">prefetch_related</span><span class="p">(</span><span class="s">'allergy_drink'</span><span class="p">).</span><span class="n">get</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">d</span> <span class="o">=</span> <span class="n">c</span><span class="p">.</span><span class="n">allergy_drink</span><span class="p">.</span><span class="nb">all</span><span class="p">()</span> <span class="c1"># Doesn't hit the database
</span></code></pre></div></div>

<h3 id="select_relatedfields">select_related(*fields)</h3>
<p><code class="language-plaintext highlighter-rouge">select_related</code> 는 1:1, 1:N 관계에서 SQL의 JOIN 쿼리를 통해 연관 객체를 caching 한다. 이때 필요한 정보를 찾을 때 마다 데이터베이스에 접근하지 않고 미리 caching 된 값을 사용하기 때문에 데이터이스에 쿼리를 한 번만 날리게 된다. 하지만 <code class="language-plaintext highlighter-rouge">select_related</code> 는 N:M, N:1 관계에서 사용할 수 없다. <em>N에 대한 데이터</em>가 필요한 경우엔 <code class="language-plaintext highlighter-rouge">prefetch_related</code> 를 사용한다.</p>

<h3 id="prefetch_relatedlookups">prefetch_related(*lookups)</h3>
<p><code class="language-plaintext highlighter-rouge">prefetch_related</code> 는 <em>N:M, N:1 관계 (Many-to-Many, 역 ForeignKey 필드)</em>에서 사용하는데 각 두 개의 테이블에 대하여 쿼리를 날려 데이터베이스를 두 번 히트하게 된다. (테이블의 정보를 따로 가져온 후 파이썬에서 <code class="language-plaintext highlighter-rouge">JOIN</code>)</p>

<p>1:N 관계에서 1의 정보가 필요해 가져오려는 경우에는 테이블 개수만큼 DB를 히트하는 <code class="language-plaintext highlighter-rouge">prefetch_related</code> 보다 <code class="language-plaintext highlighter-rouge">select_related</code> 가 더 적절한 방식이라고 볼 수 있다.</p>

<p>GenericRelation과 GenericForeignKey에 대한 prefetching도 지원한다.
<br /></p>

<hr />

<p><em>(참고)</em></p>

<p>1) 아래 <code class="language-plaintext highlighter-rouge">a</code>와 <code class="language-plaintext highlighter-rouge">b</code> 는 같은 값을 반환한다.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="n">Drink</span><span class="p">.</span><span class="n">objects</span><span class="p">.</span><span class="n">select_related</span><span class="p">(</span><span class="s">'category'</span><span class="p">,</span> <span class="s">'nutrition'</span><span class="p">)</span>
<span class="n">b</span> <span class="o">=</span> <span class="n">Drink</span><span class="p">.</span><span class="n">objects</span><span class="p">.</span><span class="n">select_related</span><span class="p">(</span><span class="s">'category'</span><span class="p">).</span><span class="n">select_related</span><span class="p">(</span><span class="s">'nutrition'</span><span class="p">)</span>
</code></pre></div></div>

<p>2) <code class="language-plaintext highlighter-rouge">all()</code> / <code class="language-plaintext highlighter-rouge">prefetch_related</code> 로 역참조하는 객체를 미리 가져오는 경우</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">allergies</span> <span class="o">=</span> <span class="n">Allergy</span><span class="p">.</span><span class="n">objects</span><span class="p">.</span><span class="nb">all</span><span class="p">()</span>

<span class="c1">#---------------------------------------#
</span>
<span class="n">allergies</span> <span class="o">=</span> <span class="n">Allergy</span><span class="p">.</span><span class="n">objects</span><span class="p">.</span><span class="n">prefetch_related</span><span class="p">(</span><span class="s">'drink_set'</span><span class="p">)</span>

<span class="k">for</span> <span class="n">allergy</span> <span class="ow">in</span> <span class="n">allergies</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">allergy</span><span class="p">.</span><span class="n">drink_set</span><span class="p">.</span><span class="n">values</span><span class="p">())</span>
</code></pre></div></div>

<hr />
<h2 id="reverse-relationships">reverse relationships</h2>
<h3 id="related_name">related_name</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>drink_1 = Drink.objects.get(id=1)
categorys = drink_1.category.all()
</code></pre></div></div>
<p><code class="language-plaintext highlighter-rouge">Drink</code> 객체는 <code class="language-plaintext highlighter-rouge">Category</code> 객체를 정참조하고 있기 때문에 필드 이름으로 바로 접근 할 수 있다.<br />
반대로 Category는 필드 이름으로 Drink에 똑같이 접근할 수 있을까?
-&gt; <b style="color:red">불가능 !!</b></p>

<p><code class="language-plaintext highlighter-rouge">Category</code> 객체는 <code class="language-plaintext highlighter-rouge">Drink</code> 객체를 역참조하고 있기 때문에 바로 필드 이름으로 접근하는 것은 불가능하다.
역참조 관계일 때는 아래와 같이 <code class="language-plaintext highlighter-rouge">(class_name)_set</code> 이라는 속성을 통해 접근한다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>category_1 = Category.objects.get(id=1)
categorys = category_1.drink_set.all()
</code></pre></div></div>

<p>이때, <code class="language-plaintext highlighter-rouge">(class_name)_set</code>가 아닌 더욱 편하고 직관적인 이름으로 역참조하는 테이블로 접근하기 위한 <code class="language-plaintext highlighter-rouge">related_name</code> 을 지정할 수 있다.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Drink</span><span class="p">(</span><span class="n">models</span><span class="p">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="p">...</span> <span class="c1"># (생략)
</span>    <span class="n">category</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="s">'Category'</span><span class="p">,</span> <span class="n">on_delete</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">CASCADE</span><span class="p">,</span> <span class="n">related_name</span> <span class="o">=</span> <span class="s">'drink_set'</span><span class="p">)</span> <span class="c1"># related_name 지정 
</span>    <span class="p">...</span> <span class="c1"># (생략)
</span></code></pre></div></div>
<p><code class="language-plaintext highlighter-rouge">related_name</code> 을 지정할 경우 <code class="language-plaintext highlighter-rouge">Category</code> 테이블에서 <code class="language-plaintext highlighter-rouge">Drink</code> 테이블로 접근하려할 때<br />
<code class="language-plaintext highlighter-rouge">Category.objects.prefetch_related('drink_set')</code> 와 같이 접근할 수 있다.</p>

:ET