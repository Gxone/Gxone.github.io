I"$<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// User.java</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">User</span> <span class="o">{</span>
    <span class="nd">@Id</span>
    <span class="nd">@GeneratedValue</span>
    <span class="kd">private</span> <span class="nc">Integer</span> <span class="n">id</span><span class="o">;</span>

    <span class="nd">@Size</span><span class="o">(</span><span class="n">min</span><span class="o">=</span><span class="mi">2</span><span class="o">,</span> <span class="n">message</span> <span class="o">=</span> <span class="s">"Name은 2글자 이상 입력해 주세요."</span><span class="o">)</span>
    <span class="nd">@ApiModelProperty</span><span class="o">(</span><span class="n">notes</span> <span class="o">=</span> <span class="s">"사용자 이름을 입력해 주세요."</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>
    <span class="nd">@Past</span>
    <span class="nd">@ApiModelProperty</span><span class="o">(</span><span class="n">notes</span> <span class="o">=</span> <span class="s">"사용자의 등록일을 입력해 주세요."</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">Date</span> <span class="n">joinDate</span><span class="o">;</span>

    <span class="nd">@ApiModelProperty</span><span class="o">(</span><span class="n">notes</span> <span class="o">=</span> <span class="s">"사용자의 패스워드를 입력해 주세요."</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">password</span><span class="o">;</span>
    <span class="nd">@ApiModelProperty</span><span class="o">(</span><span class="n">notes</span> <span class="o">=</span> <span class="s">"사용자의 주민번호를 입력해 주세요."</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">ssn</span><span class="o">;</span>

    <span class="nd">@OneToMany</span><span class="o">(</span><span class="n">mappedBy</span> <span class="o">=</span> <span class="s">"user"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Post</span><span class="o">&gt;</span> <span class="n">posts</span><span class="o">;</span>
</code></pre></div></div>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// UserController.java</span>

    <span class="nd">@PostMapping</span><span class="o">(</span><span class="s">"/users"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">ResponseEntity</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;</span> <span class="nf">createUser</span><span class="o">(</span><span class="nd">@Valid</span> <span class="nd">@RequestBody</span> <span class="nc">User</span> <span class="n">user</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">User</span> <span class="n">savedUser</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="n">user</span><span class="o">);</span>

        <span class="no">URI</span> <span class="n">location</span> <span class="o">=</span> <span class="nc">ServletUriComponentsBuilder</span><span class="o">.</span><span class="na">fromCurrentRequest</span><span class="o">()</span>
                <span class="o">.</span><span class="na">path</span><span class="o">(</span><span class="s">"/{id}"</span><span class="o">)</span>
                <span class="o">.</span><span class="na">buildAndExpand</span><span class="o">(</span><span class="n">savedUser</span><span class="o">.</span><span class="na">getId</span><span class="o">())</span>
                <span class="o">.</span><span class="na">toUri</span><span class="o">();</span>

        <span class="k">return</span> <span class="nc">ResponseEntity</span><span class="o">.</span><span class="na">created</span><span class="o">(</span><span class="n">location</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="nd">@DeleteMapping</span><span class="o">(</span><span class="s">"/users/{id}"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">deleteUser</span><span class="o">(</span><span class="nd">@PathVariable</span> <span class="kt">int</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">User</span> <span class="n">user</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">deleteById</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>

        <span class="k">if</span> <span class="o">(</span><span class="n">user</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">UserNotFoundException</span><span class="o">(</span><span class="nc">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"ID[%s] not found"</span><span class="o">,</span> <span class="n">id</span><span class="o">));</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></div></div>
<p><code class="language-plaintext highlighter-rouge">@Valid</code> : 이 어노테이션을 통해 유효성 검사를 하게 된다. 
유효하지 않은 값을 넘겨줄 경우 400 에러를 반환한다.</p>

<p><code class="language-plaintext highlighter-rouge">@Size(min=2, message = "Name은 2글자 이상 입력해 주세요.")</code>: 메시지를 같이 전달할 수 있다. 메시지를 지정해줄 경우 body defalt message 가 지정해준 메시지로 변경되어 출력된다.</p>

<p>상세 데이터를 아이디로 조회할 경우 (“/user/{id}”) 넘겨받는 id 또한 유효성 검사가 가능하다. ㄴ</p>

<p><br /></p>

<h2 id="body-에-에러메세지-출력">body 에 에러메세지 출력</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@RestController</span>
<span class="nd">@ControllerAdvice</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CustomizedResponseEntityExceptionHandler</span> <span class="kd">extends</span> <span class="nc">ResponseEntityExceptionHandler</span> <span class="o">{</span>
    <span class="c1">// .. (생략)</span>
</code></pre></div></div>
<p>에러 발생시 모든 컨트롤러 실행시 사전에 실행되는 컨트롤러.
문제 발생시 위 컨트롤러에서 에러메시지를 가로챈다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// .. (생략)</span>
 <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="nc">ResponseEntity</span><span class="o">&lt;</span><span class="nc">Object</span><span class="o">&gt;</span> <span class="nf">handleMethodArgumentNotValid</span><span class="o">(</span><span class="nc">MethodArgumentNotValidException</span> <span class="n">ex</span><span class="o">,</span>
                                                                  <span class="nc">HttpHeaders</span> <span class="n">headers</span><span class="o">,</span>
                                                                  <span class="nc">HttpStatus</span> <span class="n">status</span><span class="o">,</span>
                                                                  <span class="nc">WebRequest</span> <span class="n">request</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">ExceptionResponse</span> <span class="n">exceptionResponse</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ExceptionResponse</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">(),</span>
                <span class="s">"Validation Failed"</span><span class="o">,</span> <span class="n">ex</span><span class="o">.</span><span class="na">getBindingResult</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>

        <span class="k">return</span> <span class="k">new</span> <span class="nf">ResponseEntity</span><span class="o">(</span><span class="n">exceptionResponse</span><span class="o">,</span> <span class="nc">HttpStatus</span><span class="o">.</span><span class="na">BAD_REQUEST</span><span class="o">);</span>
</code></pre></div></div>
<p><code class="language-plaintext highlighter-rouge">ResponseEntityExceptionHandler</code>의 <code class="language-plaintext highlighter-rouge">handleMethodArgumentNotValid</code>를 재정의(오버라이딩)해서 사용한다.</p>

:ET